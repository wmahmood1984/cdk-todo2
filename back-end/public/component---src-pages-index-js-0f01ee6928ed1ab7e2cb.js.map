{"version":3,"sources":["webpack:///C:/Users/IT/node_modules/shortid/index.js","webpack:///C:/Users/IT/node_modules/nanoid/format.browser.js","webpack:///C:/Users/IT/node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack:///C:/Users/IT/node_modules/shortid/lib/random/random-from-seed.js","webpack:///C:/Users/IT/node_modules/shortid/lib/build.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack:///./src/pages/index.js","webpack:///C:/Users/IT/node_modules/shortid/lib/is-valid.js","webpack:///C:/Users/IT/node_modules/shortid/lib/index.js","webpack:///C:/Users/IT/node_modules/shortid/lib/random/random-byte-browser.js","webpack:///C:/Users/IT/node_modules/shortid/lib/generate.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///C:/Users/IT/node_modules/shortid/lib/alphabet.js"],"names":["module","exports","random","alphabet","size","mask","Math","log","length","LN2","step","id","bytes","i","seed","nextValue","_seed_","counter","previousSeconds","generate","clusterWorkerId","str","seconds","floor","Date","now","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_taggedTemplateLiteralLoose","strings","raw","slice","GET_NOTES","gql","CREATE_NOTES","CREATE_EVENT","Home","useState","name","setName","useQuery","data","loading","createEvent","useMutation","handleSubmit","fn","a","note","shortid","completed","console","variables","self","this","args","arguments","apply","err","undefined","type","placeholder","onChange","target","onClick","listNotes","map","item","style","marginLeft","marginTop","RegExp","get","replace","test","build","isValid","seedValue","worker","workerId","characters","newCharacters","shuffled","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","push","format","number","loopCounter","pow","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","previousSeed","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","unique","split","filter","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","splice","shuffle","lookup","index"],"mappings":"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","file":"component---src-pages-index-js-0f01ee6928ed1ab7e2cb.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./lib/index');","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1; // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n\n  var step = -~(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var bytes = random(step); // Compact alternative for `for (var i = 0; i < step; i++)`\n\n    var i = step;\n\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''; // More compact than `id.length + 1 === size`\n\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nmodule.exports = 0;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import React, { useState } from \"react\"\r\nimport { useQuery, gql, useMutation } from \"@apollo/client\"\r\nimport shortid from \"shortid\"\r\n\r\n\r\n\r\nconst GET_NOTES = gql`\r\n  query {\r\n    listNotes {\r\n    completed\r\n    id\r\n    name\r\n  }\r\n  }\r\n`\r\n\r\nconst CREATE_NOTES = gql`\r\n  mutation createNote( $note: NoteInput!) {\r\n    createNote(note:$note) {\r\n      id\r\n      name\r\n      completed\r\n    }\r\n  }\r\n`\r\n\r\nconst CREATE_EVENT = gql`\r\n  mutation createEvent( $id: String!, $name: String!, $completed: String!) {\r\n    createEvent(id:$id, name:$name, completed:$completed) {\r\n      result\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n  const [name,setName] = useState(\"\")\r\n  const { data, loading } = useQuery(GET_NOTES)\r\n  const [createNote] = useMutation(CREATE_NOTES)\r\n  const [createEvent] = useMutation(CREATE_EVENT)\r\n  \r\n  \r\n  const handleSubmit = async () => {\r\n    const note = {\r\n      id: shortid.generate(),\r\n      name,\r\n      completed: 'false',\r\n    }\r\n    console.log(\"Creating Todo:\", note)\r\n    setName(\"\")\r\n    // await createNote({\r\n    //   variables: {\r\n    //     note,\r\n    //   },\r\n    //   refetchQueries:[{query:GET_NOTES}]\r\n    // }\r\n    \r\n    // )\r\n\r\n    await createEvent({\r\n      variables: {\r\n        id:note.id,\r\n        name:note.name,\r\n        completed:note.completed,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (<div><div>\r\n    {loading && <h1>Loading ...</h1>}\r\n      <label> To Dos\r\n      <input\r\n      value={name}\r\n      type=\"text\"\r\n      placeholder=\"Thing to do \"\r\n      onChange={({ target }) => setName(target.value)}\r\n      />\r\n      </label>\r\n      <button\r\n      onClick={() => handleSubmit()}\r\n      >Add Todo</button>\r\n    </div>\r\n\r\n\r\n    {!loading &&\r\n      data &&\r\n      data.listNotes.map(item => (\r\n        <div style={{ marginLeft: \"1rem\", marginTop: \"2rem\" }} key={item.id}>\r\n          {item.name} {item.completed ? \"DONE\" : \"NOT COMPLETED\"}\r\n        </div>\r\n      ))}</div>)\r\n}\r\n","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};"],"sourceRoot":""}